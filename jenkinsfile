pipeline {

  agent any

  stages{
    stage('Environment'){
      steps{
        sh 'printenv'
        sh 'terraform --version'
      }
    }
    stage('Checkout'){
      steps {
        echo 'Pulling... ' + env.GIT_BRANCH
        checkout changelog: false, 
                  scm: [$class: 'GitSCM', 
                  branches: [[name: env.GIT_BRANCH]], 
                  extensions: [], 
                  userRemoteConfigs: [[credentialsId: 'ada2335b-6875-41b1-bbc8-53aa2e345d17', 
                  url: 'git@github.com:codebaard/JenkinsPlayground.git']]]
      }   
    }
    stage('Validate Terraform') {
      steps {
        dir("terraform") {
          sh 'echo terraform init'
          sh 'echo terraform validate'
          sh 'echo terraform plan'
        }
      }      
    }

    stage('Validate Flyway'){
      steps{
        dir("flyway"){
          sh 'flyway --version'
          sh 'chmod +x DispatchFiles.sh'
          sh './DispatchFiles.sh'
          sh 'flyway migrate'
        }
      }
    }

    stage('Deploy') {
      when { equals expected: 'origin/main', actual: env.GIT_BRANCH }
      steps {
        script {
            def userInput = input(id: 'confirm', 
                              message: 'Apply Terraform?', 
                              parameters: [ [$class: 'BooleanParameterDefinition', 
                                defaultValue: false, 
                                description: 'Apply terraform', 
                                name: 'confirm'] 
                              ])
        }
        sh 'echo terraform apply -auto-approve'
      }                      
    } 
  }
} 